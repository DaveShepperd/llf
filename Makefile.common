# $Id$
# LLF makefile
# 080915 - D. Shepperd

A1 = llf.o gc.o pass1.o pass2.o memmgt.o symbol.o reserve.o
A2 = hashit.o insert_id.o lc.o grpmgr.o reloc.o symdef.o help.o 
A3 = outx.o mapsym.o object.o qksort.o err2str.o add_defs.o timer.o 

AC1 = llf.c gc.c gctable.c pass1.c pass2.c memmgt.c symbol.c reserve.c
AC2 = hashit.c insert_id.c lc.c grpmgr.c reloc.c symdef.c help.c 
AC3 = outx.c mapsym.c object.c qksort.c err2str.c add_defs.c timer.c 

OBJ_FILES = $(A1) $(A2) $(A3)

ALLH  = add_defs.h 
ALLH += exproper.h
ALLH += formats.h
ALLH += header.h
ALLH += memmgt.h
ALLH += pragma1.h
ALLH += pragma.h
ALLH += qksort.h
ALLH += qualtbl.h
ALLH += segdef.h
ALLH += structs.h
ALLH += token.h
ALLH += version.h
ALLH += vlda_structs.h

# Extra defines available #-DALIGNMENT=2 #-DBIG_ENDIAN #-DDEBUG_MALLOC #-DDEBUG_LINK 
DEFINES = -DLLF -DEXTERNAL_PACKED_STRUCTS -D_ISOC99_SOURCE
DEFINES += $(EXTRA_DEFINES)

INCS = -I.

HERE = ./
EXE =
ifeq ($(MINGW),1)
	EXE = .exe
	HERE = .\\
endif
ifeq ($(MSYS2),1)
	EXE = .exe
endif

WARN = -Wall -ansi -pedantic -Wno-char-subscripts
CFLAGS = $(OPT) $(DBG) $(WARN) $(DEFINES) $(HOST_MACH) $(INCS) $(EXTRA_CHKS)

C = $(CC) -c $(CFLAGS)
D = $(CC) -c $(CFLAGS)
L = $(CC) $(DBG) $(HOST_MACH)
MAKEFILE = Makefile.common
ALLH += $(MAKEFILE)

default: llf$(EXE) vecextract$(EXE) 
	$(ECHO) $(DELIM)    Done...$(DELIM)

% :
	@echo $(DELIM) Hmmm...Do not know how to make $@...$(DELIM)

.SILENT:

llf$(EXE) : $(OBJ_FILES) $(MAKEFILE)
	@$(ECHO) $(DELIM)    linking...$(DELIM)
	$L -o $@ $(filter-out $(MAKEFILE),$^)

vecextract$(EXE) : vecextract.c vlda_structs.h segdef.h version.h $(MAKEFILE)
	$(ECHO) $(DELIM)    Building vecextract...$(DELIM)
	$(CC) $(CFLAGS) -D_POSIX_C_SOURCE -o $@ $<

llf.ln : $(MAKEFILE)
	llf -OUT=$@ -MAP=llf.tmap -err -rel -deb llfst -opt

%.o : %.c
	$(ECHO) $(DELIM)    Compiling $<...$(DELIM)
	$(CC) $(CFLAGS) -c -DFILE_ID_NAME=$(basename $<)_id $(SUPPRESS_FILE_ID) $<

%.E : %.c
	$(ECHO) $(DELIM)    Compiling to .E $<...$(DELIM)
	$(CC) $(CFLAGS) -E -DFILE_ID_NAME=$(basename $<)_id $(SUPPRESS_FILE_ID) $< > $@

clean:
	$(RM) *.o *.lis *.E llf.ln llf$(EXE) vecextract$(EXE) core* qualtbl.h

qualtbl.h : qualtbl.dat mk_qualtbl$(EXE) $(MAKEFILE)
	$(ECHO) $(DELIM)    Making $@ ... $(DELIM)
	$(HERE)mk_qualtbl > $@

mk_qualtbl$(EXE) : mk_qualtbl.o $(MAKEFILE)
	$(ECHO) $(DELIM)    Makeing $@ ... $(DELIM)
	$L -o $@ $(filter-out $(MAKEFILE),$^)

mk_qualtbl.o : mk_qualtbl.c formats.h $(MAKEFILE)

add_defs.o: add_defs.c $(ALLH)
err2str.o: err2str.c  $(ALLH)
gc.o: gc.c  $(ALLH)
gctable.o: gctable.c  $(ALLH)
grpmgr.o: grpmgr.c   $(ALLH)
hashit.o: hashit.c  $(ALLH)
help.o: help.c  $(ALLH)
insert_id.o: insert_id.c  $(ALLH)
lc.o: lc.c  $(ALLH)
llf.o: llf.c  $(ALLH)
mapsym.o: mapsym.c  $(ALLH)
memmgt.o: memmgt.c  $(ALLH)
object.o: object.c  $(ALLH)
outx.o: outx.c  $(ALLH)
pass1.o: pass1.c  $(ALLH)
pass2.o: pass2.c  $(ALLH)
qksort.o: qksort.c  $(ALLH)
reloc.o: reloc.c  $(ALLH)
reserve.o: reserve.c  $(ALLH)
symbol.o: symbol.c  $(ALLH)
symdef.o: symdef.c  $(ALLH)
timer.o: timer.c  $(ALLH)
